# Copyright (C) 2019 The Raphielscape Company LLC.
#
# Licensed under the Raphielscape Public License, Version 1.c (the "License");
# you may not use this file except in compliance with the License.
#

# Golden UserBot 

""" UserBot baÅŸlangÄ±Ã§ nÃ¶ktÉ™si """
import importlib
from importlib import import_module
from sqlite3 import connect
import os
import requests
from telethon.tl.types import InputMessagesFilterDocument
from telethon.errors.rpcerrorlist import PhoneNumberInvalidError
from telethon.tl.functions.channels import GetMessagesRequest
from . import BRAIN_CHECKER, LOGS, bot, PLUGIN_CHANNEL_ID, CMD_HELP, LANGUAGE, GOLDEN_VERSION, PATTERNS
from .modules import ALL_MODULES
import userbot.modules.sql_helper.mesaj_sql as MSJ_SQL
import userbot.modules.sql_helper.galeri_sql as GALERI_SQL
from pySmartDL import SmartDL
from telethon.tl import functions

from random import choice
import chromedriver_autoinstaller
from json import loads, JSONDecodeError
import re
import userbot.cmdhelp

DIZCILIK_STR = [
    "StikerdÉ™n nifrÉ™t edirÉ™m...",
     "YaÅŸasÄ±n diz Ã§Ã¶kÉ™k...",
     "Bu stikeri Ã¶z paketimÉ™ dÉ™vÉ™t edirÉ™m...",
     "MÉ™n bunu riÅŸxÉ™nd etmÉ™liyÉ™m..."
     "Hey, bu gÃ¶zÉ™l stikerdir!\nMÉ™n dÉ™rhal sidiyirÉ™m..",
     "StikerinizÉ™ nifrÉ™t edirÉ™m\nhahaha.",
     "Hey bax oraya. (â˜‰ï½¡â˜‰)!â†’\nMÉ™n bunu satarkÉ™n...",
     "QÄ±zÄ±lgÃ¼llÉ™r qÄ±rmÄ±zÄ±dÄ±r, bÉ™nÃ¶vÅŸÉ™lÉ™r mavidir, bu stikeri paketimÉ™ yapÄ±ÅŸdÄ±rsam sÉ™rin olaram...",
     "Stiker hÉ™bsdÉ™dir...",
      "CÉ™nab zarafatcÄ±l bu stikeri sÄ±zÄ±ldadÄ±r",
]

AFKSTR = [
    "MÉ™n indi tÉ™lÉ™sirÉ™m, sonra mÉ™nÉ™ yaza bilÉ™rsÉ™n? Onsuz da yenÉ™ gÉ™lÉ™cÉ™m.",
    "ZÉ™ng etdiyiniz ÅŸÉ™xs hazÄ±rda telefona cavab verÉ™ bilmir. Tondan sonra mesajÄ±nÄ±zÄ± Ã¶z tarifinizdÉ™ qoya bilÉ™rsiniz. MesajÄ±n qiymÉ™ti 49 qÉ™pikdir. \n`biiiiiiiiiiiiiiiiiiiiiiiiiiiiip`!",
    "Bir neÃ§É™ dÉ™qiqÉ™yÉ™ qayÄ±dacaÄŸam. Amma etmÉ™sÉ™m... bir az daha gÃ¶zlÉ™yin.",
    "HazÄ±rda burada deyilÉ™m, yÉ™qin ki, baÅŸqa yerdÉ™yÉ™m.",
    "QÄ±zÄ±lgÃ¼llÉ™r qÄ±rmÄ±zÄ±dÄ±r\nBÉ™nÃ¶vÅŸÉ™lÉ™r mavidir\nMÉ™nÉ™ mesaj buraxÄ±n\nMÉ™n sizÉ™ qayÄ±dacaÄŸam.",
    "BÉ™zÉ™n hÉ™yatda É™n yaxÅŸÄ± ÅŸeylÉ™r gÃ¶zlÉ™mÉ™yÉ™ dÉ™yÉ™r...\nMÉ™n tezliklÉ™ qayÄ±dacaÄŸam.",
    "MÉ™n tezliklÉ™ qayÄ±dacaÄŸam, amma qayÄ±tmasam, daha sonra qayÄ±dacaÄŸam.",
    "HÉ™lÉ™ baÅŸa dÃ¼ÅŸmÃ¼rsÉ™nsÉ™,\nMÉ™n burada deyilÉ™m.",
    "Salam, uzaq mesajÄ±ma xoÅŸ gÉ™ldin, bu gÃ¼n sÉ™ni necÉ™ gÃ¶rmÉ™mÉ™zliyÉ™ vura bilÉ™rÉ™m?",
    "MÉ™n 7 dÉ™niz vÉ™ 7 Ã¶lkÉ™dÉ™n,\n7 su vÉ™ 7 qitÉ™dÉ™n,\n7 daÄŸ vÉ™ 7 tÉ™pÉ™dÉ™n,\n7 dÃ¼zÉ™n vÉ™ 7 kurqandan,\n7 hovuz vÉ™ 7 gÃ¶ldÉ™n,\n7 bulaqdan vÉ™ 7 Ã§É™mÉ™nlikdÉ™n,\n7 ÅŸÉ™hÉ™rdÉ™n vÉ™ 7 mÉ™hÉ™llÉ™, \n7 mÉ™hÉ™llÉ™ vÉ™ 7 ev...\n\nMÉ™nÉ™ mesajlarÄ±n belÉ™ Ã§ata bilmÉ™yÉ™cÉ™yi yer!",
    "HazÄ±rda klaviaturadan uzaqdayam, amma ekranda kifayÉ™t qÉ™dÉ™r yÃ¼ksÉ™k sÉ™slÉ™ qÄ±ÅŸqÄ±rsan, sÉ™ni eÅŸidirÉ™m.",
    "MÉ™n aÅŸaÄŸÄ±dakÄ± istiqamÉ™tdÉ™ hÉ™rÉ™kÉ™t edirÉ™m\n---->",
    "MÉ™n bu istiqamÉ™tdÉ™ gedirÉ™m\n<----",
    "LÃ¼tfÉ™n, bir mesaj buraxÄ±n vÉ™ mÉ™ni artÄ±q olduÄŸumdan daha vacib hiss etdirin.",
    "Sahibim burada deyil, mÉ™nÉ™ mesaj yazmaÄŸÄ± dayandÄ±rÄ±n.",
    "Burada olsaydÄ±m\nSÉ™nÉ™ harda olduÄŸumu deyÉ™rdim.\n\nAmma mÉ™n deyilÉ™m,\ngeri qayÄ±danda soruÅŸ...",
    "MÉ™n uzaqdayam!\nBilmirÉ™m nÉ™ vaxt qayÄ±dacaÄŸam!\nÄ°nÅŸallah bir neÃ§É™ dÉ™qiqÉ™yÉ™!",
    "Sahibim hazÄ±rda mÃ¼sait deyil. AdÄ±nÄ±zÄ±, nÃ¶mrÉ™nizi vÉ™ Ã¼nvanÄ±nÄ±zÄ± bildirsÉ™niz, mÉ™n onu ona verÉ™ bilÉ™rÉ™m ki, qayÄ±danda.",
    "BaÄŸÄ±ÅŸlayÄ±n, ustadÄ±m burada deyil.\nO gÉ™lÉ™nÉ™ qÉ™dÉ™r mÉ™nimlÉ™ danÄ±ÅŸa bilÉ™rsiniz.\nAÄŸam daha sonra sizinlÉ™ É™laqÉ™ saxlayacaq.",
    "MÉ™hz edirÉ™m ki, bir mesaj gÃ¶zlÉ™yirdin!",
    "HÉ™yat Ã§ox qÄ±sadÄ±r, gÃ¶rÃ¼lÉ™si Ã§ox ÅŸey var...\nMÉ™n onlardan birini edirÉ™m...",
    "Hal-hazÄ±rda burada deyilÉ™m....\n amma olsam ...\n\nbu É™la olmazdÄ±mÄ±?",
]

UNAPPROVED_MSG = ("`Hey,` {mention}`! Bu botdur. Narahat olma.\n\n`"
                  "`Sahibim sÉ™nÉ™ pm gÃ¶ndÉ™rmÉ™yÉ™ icazÉ™ vermÉ™di. `"
                  "`XahiÅŸ edirÉ™m sahibimin aktiv olmasÄ±nÄ± gÃ¶zlÉ™yin, o, adÉ™tÉ™n PM-lÉ™ri tÉ™sdiqlÉ™yir.\n\n`"
                  "`BildiyimÉ™ gÃ¶rÉ™ baÅŸ nazirdÉ™n dÉ™lilÉ™rÉ™ icazÉ™ vermir.`")

DB = connect("learning-data-root.check")
CURSOR = DB.cursor()
CURSOR.execute("""SELECT * FROM BRAIN1""")
ALL_ROWS = CURSOR.fetchall()
INVALID_PH = '\nHATA: Daxil edilÉ™n telefon nÃ¶mrÉ™si yanlÄ±ÅŸdÄ±r' \
             '\n  Ipucu: Ã–lkÉ™ kodundan istifadÉ™ edÉ™rÉ™k nÃ¶mrÉ™nizi daxil edin' \
             '\n       Telefon nÃ¶mrÉ™nizi yenidÉ™n yoxlayÄ±n'

for i in ALL_ROWS:
    BRAIN_CHECKER.append(i[0])
connect("learning-data-root.check").close()

def extractCommands(file):
    FileRead = open(file, 'r').read()
    
    if '/' in file:
        file = file.split('/')[-1]

    Pattern = re.findall(r"@register\(.*pattern=(r|)\"(.*)\".*\)", FileRead)
    Komutlar = []

    if re.search(r'CmdHelp\(.*\)', FileRead):
        pass
    else:
        dosyaAdi = file.replace('.py', '')
        CmdHelp = userbot.cmdhelp.CmdHelp(dosyaAdi, False)

        # KomutlarÄ± AlÄ±yoruz #
        for Command in Pattern:
            Command = Command[1]
            if Command == '' or len(Command) <= 1:
                continue
            Komut = re.findall("(^.*[a-zA-Z0-9ÅŸÄŸÃ¼Ã¶Ã§Ä±]\w)", Command)
            if (len(Komut) >= 1) and (not Komut[0] == ''):
                Komut = Komut[0]
                if Komut[0] == '^':
                    KomutStr = Komut[1:]
                    if KomutStr[0] == '.':
                        KomutStr = KomutStr[1:]
                    Komutlar.append(KomutStr)
                else:
                    if Command[0] == '^':
                        KomutStr = Command[1:]
                        if KomutStr[0] == '.':
                            KomutStr = KomutStr[1:]
                        else:
                            KomutStr = Command
                        Komutlar.append(KomutStr)

            # GoldenPY
            Goldenpy = re.search('\"\"\"GOLDENPY(.*)\"\"\"', FileRead, re.DOTALL)
            if not Goldenpy == None:
                Goldenpy = Goldenpy.group(0)
                for Satir in Goldenpy.splitlines():
                    if (not '"""' in Satir) and (':' in Satir):
                        Satir = Satir.split(':')
                        Isim = Satir[0]
                        Deger = Satir[1][1:]
                                
                        if Isim == 'INFO':
                            CmdHelp.add_info(Deger)
                        elif Isim == 'WARN':
                            CmdHelp.add_warning(Deger)
                        else:
                            CmdHelp.set_file_info(Isim, Deger)
            for Komut in Komutlar:
                # if re.search('\[(\w*)\]', Komut):
                    # Komut = re.sub('(?<=\[.)[A-Za-z0-9_]*\]', '', Komut).replace('[', '')
                CmdHelp.add_command(Komut, None, 'Bu plugin xaricdÉ™n yÃ¼klÉ™nir. TÉ™svir mÃ¼É™yyÉ™n edilmÉ™yib.')
            CmdHelp.add()

try:
    bot.start()
    idim = bot.get_me().id
    goldenbl = requests.get('https://gitlab.com/Emin-ahmedoff/gold/-/raw/main/golden.json').json()
    if idim in goldenbl:
        bot.disconnect()

    # ChromeDriver'Ä± AyarlayalÄ±m #
    try:
        chromedriver_autoinstaller.install()
    except:
        pass
    
    # Galeri iÃ§in deÄŸerler
    GALERI = {}

    # PLUGIN MESAJLARI AYARLIYORUZ
    PLUGIN_MESAJLAR = {}
    ORJ_PLUGIN_MESAJLAR = {"alive": "`Byy Sahibim MÉ™ni Ã§aÄŸirdin.? Narahat olma ðŸª™ GoldenUserBot Ä°ÅŸlÉ™yir.`", "afk": f"`{str(choice(AFKSTR))}`", "kickme": "`saÄŸol mÉ™n gedirÉ™m `ðŸ¤ ", "pm": UNAPPROVED_MSG, "dÄ±zcÄ±": str(choice(DIZCILIK_STR)), "ban": "{mention}`, qadaÄŸan edildi!`", "mute": "{mention}`, sÉ™ssizÉ™ alÄ±ndÄ±!`", "approve": "{mention}`, mÉ™nÉ™ mesaj gÃ¶ndÉ™rÉ™ bilÉ™rsiniz!`", "disapprove": "{mention}`, daha mÉ™nÉ™ mesaj gÃ¶ndÉ™rÉ™ bilmÉ™zsÉ™n!`", "block": "{mention}`, siz bloklanmÄ±sÄ±nÄ±z!`"}

    PLUGIN_MESAJLAR_TURLER = ["alive", "afk", "kickme", "pm", "dÄ±zcÄ±", "ban", "mute", "approve", "disapprove", "block"]
    for mesaj in PLUGIN_MESAJLAR_TURLER:
        dmsj = MSJ_SQL.getir_mesaj(mesaj)
        if dmsj == False:
            PLUGIN_MESAJLAR[mesaj] = ORJ_PLUGIN_MESAJLAR[mesaj]
        else:
            if dmsj.startswith("MEDYA_"):
                medya = int(dmsj.split("MEDYA_")[1])
                medya = bot.get_messages(PLUGIN_CHANNEL_ID, ids=medya)

                PLUGIN_MESAJLAR[mesaj] = medya
            else:
                PLUGIN_MESAJLAR[mesaj] = dmsj
    if not PLUGIN_CHANNEL_ID == None:
        LOGS.info("Pluginler YÃ¼klÉ™nir")
        try:
            KanalId = bot.get_entity(PLUGIN_CHANNEL_ID)
        except:
            KanalId = "me"

        for plugin in bot.iter_messages(KanalId, filter=InputMessagesFilterDocument):
            if plugin.file.name and (len(plugin.file.name.split('.')) > 1) \
                and plugin.file.name.split('.')[-1] == 'py':
                Split = plugin.file.name.split('.')

                if not os.path.exists("./userbot/modules/" + plugin.file.name):
                    dosya = bot.download_media(plugin, "./userbot/modules/")
                else:
                    LOGS.info("Bu Plugin ArtÄ±q QuraÅŸdÄ±rÄ±lÄ±b " + plugin.file.name)
                    extractCommands('./userbot/modules/' + plugin.file.name)
                    dosya = plugin.file.name
                    continue 
                
                try:
                    spec = importlib.util.spec_from_file_location("userbot.modules." + Split[0], dosya)
                    mod = importlib.util.module_from_spec(spec)

                    spec.loader.exec_module(mod)
                except Exception as e:
                    LOGS.info(f"`QuraÅŸdÄ±rma uÄŸursuz oldu! Plugin nasazdÄ±r.\n\nHata: {e}`")

                    try:
                        plugin.delete()
                    except:
                        pass

                    if os.path.exists("./userbot/modules/" + plugin.file.name):
                        os.remove("./userbot/modules/" + plugin.file.name)
                    continue
                extractCommands('./userbot/modules/' + plugin.file.name)
    else:
        bot.send_message("me", f"`LÃ¼tfÉ™n, pluginlÉ™rin daimi olduÄŸundan É™min olun. PLUGIN_CHANNEL_ID'i tÉ™yin edin.`")
except PhoneNumberInvalidError:
    print(INVALID_PH)
    exit(1)

async def FotoDegistir (foto):
    FOTOURL = GALERI_SQL.TUM_GALERI[foto].foto
    r = requests.get(FOTOURL)

    with open(str(foto) + ".jpg", 'wb') as f:
        f.write(r.content)    
    file = await bot.upload_file(str(foto) + ".jpg")
    try:
        await bot(functions.photos.UploadProfilePhotoRequest(
            file
        ))
        return True
    except:
        return False

for module_name in ALL_MODULES:
    imported_module = import_module("userbot.modules." + module_name)

LOGS.info("Botunuz iÅŸlÉ™yir! Ä°stÉ™nilÉ™n sÃ¶hbÉ™tdÉ™ .alive yazaraq onu yoxlayÄ±n."
           "KÃ¶mÉ™yÉ™ ehtiyacÄ±nÄ±z varsa, DÉ™stÉ™k qrupumuza gÉ™lin t.me/GoldenSupport")
LOGS.info(f"Bot sÃ¼rÃ¼mÃ¼nÃ¼z: Golden {GOLDEN_VERSION}")

"""
if len(argv) not in (1, 3, 4):
    bot.disconnect()
else:
"""
bot.run_until_disconnected()
