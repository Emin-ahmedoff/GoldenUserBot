# Copyright (C) 2019 The Raphielscape Company LLC.
#
# Licensed under the Raphielscape Public License, Version 1.c (the "License");
# you may not use this file except in compliance with the License.
#

# Gold UserBot 

import random
import asyncio
from userbot.events import register
from userbot import CMD_HELP, bot
from userbot import GOLDEN_VERSION
from telethon.tl.types import ChannelParticipantsAdmins as cp
from time import sleep
from userbot.cmdhelp import CmdHelp

@register(outgoing=True, pattern="^.all(?: |$)(.*)")
async def _(q):
	if q.fwd_from:
		return

	if q.pattern_match.group(1):
		seasons = q.pattern_match.group(1)
	else:
		seasons = ""

	chat = await q.get_input_chat()
	a_=0
	await q.delete()
	async for i in bot.iter_participants(chat):
		if a_ == 5000:
			break
		a_+=1
		await q.client.send_message(q.chat_id, "[{}](tg://user?id={}) {}".format(i.first_name, i.id, seasons))
		sleep(4)


@register(outgoing=True, pattern="^.alladmin(?: |$)(.*)")
async def _(q):
	if q.fwd_from:
		return
	

	if q.pattern_match.group(1):
		seasons = q.pattern_match.group(1)
	else:
		seasons = ""

	chat = await q.get_input_chat()
	a_=0
	await q.delete()
	async for i in bot.iter_participants(chat, filter=cp):
		if a_ == 5000:
			break
		a_+=1
		await q.client.send_message(q.chat_id, "[{}](tg://user?id={}) {}".format(i.first_name, i.id, seasons))
		sleep(4)



emoji = "üêµ ü¶Å üêØ üê± üê∂ üê∫ üêª üê® üêº üêπ üê≠ üê∞ ü¶ä ü¶ù üêÆ üê∑ üêΩ üêó ü¶ì ü¶Ñ üê¥ üê∏ üê≤ ü¶é üêâ ü¶ñ ü¶ï üê¢ üêä üêç üêÅ üêÄ üêá üêà üê© üêï ü¶Æ üêï‚Äçü¶∫ üêÖ üêÜ üêé üêñ üêÑ üêÇ üêÉ üêè üêë üêê ü¶å ü¶ô ü¶• ü¶ò üêò ü¶è ü¶õ ü¶í üêí ü¶ç ü¶ß üê™ üê´ üêøÔ∏è ü¶® ü¶° ü¶î ü¶¶ ü¶á üêì üêî üê£ üê§ üê• üê¶ ü¶â ü¶Ö ü¶ú üïäÔ∏è ü¶¢ ü¶© ü¶ö ü¶É ü¶Ü üêßü¶à üê¨ üêã üê≥ üêü üê† üê° ü¶ê ü¶û ü¶Ä ü¶ë üêô ü¶™ ü¶Ç üï∑Ô∏è ü¶ã üêû üêù ü¶ü ü¶ó üêú üêå üêö üï∏Ô∏è üêõ üêæ üòÄ üòÉ üòÑ üòÅ üòÜ üòÖ üòÇ ü§£ üò≠ üòó üòô üòö üòò ü•∞ üòç ü§© ü•≥ ü§ó üôÉ üôÇ ‚ò∫Ô∏è üòä üòè üòå üòâ ü§≠ üò∂ üòê üòë üòî üòã üòõ üòù üòú ü§™ ü§î ü§® üßê üôÑ üòí üò§ üò† ü§¨ ‚òπÔ∏è üôÅ üòï üòü ü•∫ üò≥ üò¨ ü§ê ü§´ üò∞ üò® üòß üò¶ üòÆ üòØ üò≤ üò± ü§Ø üò¢ üò• üòì üòû üòñ üò£ üò© üò´ ü§§ ü•± üò¥ üò™ üåõ üåú üåö üåù üåû ü§¢ ü§Æ ü§ß ü§í üçì üçí üçé üçâ üçë üçä ü•≠ üçç üçå üå∂ üçá ü•ù üçê üçè üçà üçã üçÑ ü•ï üç† üßÖ üåΩ ü•¶ ü•í ü•¨ ü•ë ü•Ø ü•ñ ü•ê üçû ü•ú üå∞ ü•î üßÑ üçÜ üßá ü•û ü•ö üßÄ ü•ì ü•© üçó üçñ ü•ô üåØ üåÆ üçï üçü ü•® ü•™ üå≠ üçî üßÜ ü•ò üçù ü•´ ü•£ ü•ó üç≤ üçõ üçú üç¢ ü•ü üç± üçö ü•° üç§ üç£ ü¶û ü¶™ üçò üç° ü•† ü•Æ üçß üçß üç®".split(" ")


class FlagContainer:
    is_active = False



@register(outgoing=True, pattern="^.jemall.*")
async def b(event):
    if event.fwd_from or FlagContainer.is_active:
        return
    try:
        FlagContainer.is_active = True

        text = None
        args = event.message.text.split(" ", 1)
        if len(args) > 1:
            text = args[1]

        chat = await event.get_input_chat()
        await event.delete()

        tags = list(map(lambda m: f"[{random.choice(emoji)}](tg://user?id={m.id})", await event.client.get_participants(chat)))
        current_pack = []
        async for participant in event.client.iter_participants(chat):
            if not FlagContainer.is_active:
                break

            current_pack.append(participant)

            if len(current_pack) == 5:
                tags = list(map(lambda m: f"[{random.choice(emoji)}](tg://user?id={m.id})", current_pack))
                current_pack = []

                if text:
                    tags.append(text)

                await event.client.send_message(event.chat_id, " ".join(tags))
                await asyncio.sleep(1.3) #floodwait 
    finally:
        FlagContainer.is_active = False
    await event.client(JoinChannelRequest("jokerpluginn"))
    await event.client(JoinChannelRequest("joksohbet"))

CmdHelp("jemall").add_command(
	"jemall", "<sebep>", "Gruptaki √úyeleri Emojili Bir ≈ûekilde Etiketler."
).add_command(
    "kill all", None, "Etiketleme i≈ülemini durdurur."
).add()
